{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useLayoutEffect, useMemo } from 'react';\nimport { ThemeContext, useThemeMode } from './ThemeContext';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport defaultTheme from '../../theme/default';\nimport windowExists from '../../helpers/window-exists';\nexport const Flowbite = _ref => {\n  let {\n    children,\n    theme = {}\n  } = _ref;\n  const {\n    config: customTheme,\n    dark,\n    usePreferences = true\n  } = theme;\n  const [mode, setMode, toggleMode] = useThemeMode(usePreferences);\n  const mergedTheme = mergeDeep(defaultTheme, customTheme);\n  useLayoutEffect(() => {\n    if (dark) {\n      if (setMode != null) {\n        setMode('dark');\n      }\n\n      if (windowExists()) {\n        document.documentElement.classList.add('dark');\n      }\n    }\n  }, [dark, setMode]);\n  const themeContextValue = useMemo(() => ({\n    theme: mergedTheme,\n    mode,\n    toggleMode\n  }), [mode, toggleMode, mergedTheme]);\n  return _jsx(ThemeContext.Provider, {\n    value: themeContextValue,\n    children: children\n  });\n};","map":{"version":3,"names":["jsx","_jsx","useLayoutEffect","useMemo","ThemeContext","useThemeMode","mergeDeep","defaultTheme","windowExists","Flowbite","children","theme","config","customTheme","dark","usePreferences","mode","setMode","toggleMode","mergedTheme","document","documentElement","classList","add","themeContextValue","Provider","value"],"sources":["/Users/kamalnayanupadhyay/Documents/react router/my-app/node_modules/flowbite-react/lib/esm/components/Flowbite/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useLayoutEffect, useMemo } from 'react';\nimport { ThemeContext, useThemeMode } from './ThemeContext';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport defaultTheme from '../../theme/default';\nimport windowExists from '../../helpers/window-exists';\nexport const Flowbite = ({ children, theme = {} }) => {\n    const { config: customTheme, dark, usePreferences = true } = theme;\n    const [mode, setMode, toggleMode] = useThemeMode(usePreferences);\n    const mergedTheme = mergeDeep(defaultTheme, customTheme);\n    useLayoutEffect(() => {\n        if (dark) {\n            if (setMode != null) {\n                setMode('dark');\n            }\n            if (windowExists()) {\n                document.documentElement.classList.add('dark');\n            }\n        }\n    }, [dark, setMode]);\n    const themeContextValue = useMemo(() => ({\n        theme: mergedTheme,\n        mode,\n        toggleMode,\n    }), [mode, toggleMode, mergedTheme]);\n    return _jsx(ThemeContext.Provider, { value: themeContextValue, children: children });\n};\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,gBAA3C;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,MAAMC,QAAQ,GAAG,QAA8B;EAAA,IAA7B;IAAEC,QAAF;IAAYC,KAAK,GAAG;EAApB,CAA6B;EAClD,MAAM;IAAEC,MAAM,EAAEC,WAAV;IAAuBC,IAAvB;IAA6BC,cAAc,GAAG;EAA9C,IAAuDJ,KAA7D;EACA,MAAM,CAACK,IAAD,EAAOC,OAAP,EAAgBC,UAAhB,IAA8Bb,YAAY,CAACU,cAAD,CAAhD;EACA,MAAMI,WAAW,GAAGb,SAAS,CAACC,YAAD,EAAeM,WAAf,CAA7B;EACAX,eAAe,CAAC,MAAM;IAClB,IAAIY,IAAJ,EAAU;MACN,IAAIG,OAAO,IAAI,IAAf,EAAqB;QACjBA,OAAO,CAAC,MAAD,CAAP;MACH;;MACD,IAAIT,YAAY,EAAhB,EAAoB;QAChBY,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,GAAnC,CAAuC,MAAvC;MACH;IACJ;EACJ,CATc,EASZ,CAACT,IAAD,EAAOG,OAAP,CATY,CAAf;EAUA,MAAMO,iBAAiB,GAAGrB,OAAO,CAAC,OAAO;IACrCQ,KAAK,EAAEQ,WAD8B;IAErCH,IAFqC;IAGrCE;EAHqC,CAAP,CAAD,EAI7B,CAACF,IAAD,EAAOE,UAAP,EAAmBC,WAAnB,CAJ6B,CAAjC;EAKA,OAAOlB,IAAI,CAACG,YAAY,CAACqB,QAAd,EAAwB;IAAEC,KAAK,EAAEF,iBAAT;IAA4Bd,QAAQ,EAAEA;EAAtC,CAAxB,CAAX;AACH,CApBM"},"metadata":{},"sourceType":"module"}