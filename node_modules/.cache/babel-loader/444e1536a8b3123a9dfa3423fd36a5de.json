{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useMemo } from 'react';\nimport classNames from 'classnames';\nimport * as nanoid from 'nanoid';\nexport const ToggleSwitch = _ref => {\n  let {\n    checked,\n    className,\n    disabled,\n    label,\n    name,\n    onChange,\n    ...props\n  } = _ref;\n  const id = useMemo(() => nanoid.nanoid(), []);\n\n  const toggle = () => onChange(!checked);\n\n  const handleClick = event => {\n    event.preventDefault();\n    toggle();\n  };\n\n  const handleKeyPress = event => {\n    event.preventDefault();\n  };\n\n  return _jsxs(_Fragment, {\n    children: [name && checked && _jsx(\"input\", {\n      checked: checked,\n      hidden: true,\n      name: name,\n      readOnly: true,\n      type: \"checkbox\",\n      className: \"sr-only\"\n    }), _jsxs(\"button\", {\n      \"aria-checked\": checked,\n      \"aria-labelledby\": `${id}-flowbite-toggleswitch-label`,\n      disabled: disabled,\n      id: `${id}-flowbite-toggleswitch`,\n      onClick: handleClick,\n      onKeyPress: handleKeyPress,\n      role: \"switch\",\n      tabIndex: 0,\n      type: \"button\",\n      className: classNames('group relative flex items-center rounded-lg focus:outline-none', {\n        'cursor-not-allowed opacity-50': disabled,\n        'cursor-pointer': !disabled\n      }, className),\n      ...props,\n      children: [_jsx(\"div\", {\n        className: classNames('toggle-bg h-6 w-11 rounded-full border group-focus:ring-4 group-focus:ring-blue-500/25', checked ? 'border-blue-700 bg-blue-700 after:translate-x-full after:border-white' : 'border-gray-200 bg-gray-200 dark:border-gray-600 dark:bg-gray-700')\n      }), _jsx(\"span\", {\n        \"data-testid\": \"flowbite-toggleswitch-label\",\n        id: `${id}-flowbite-toggleswitch-label`,\n        className: \"ml-3 text-sm font-medium text-gray-900 dark:text-gray-300\",\n        children: label\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","useMemo","classNames","nanoid","ToggleSwitch","checked","className","disabled","label","name","onChange","props","id","toggle","handleClick","event","preventDefault","handleKeyPress","children","hidden","readOnly","type","onClick","onKeyPress","role","tabIndex"],"sources":["/Users/kamalnayanupadhyay/Documents/react router/my-app/node_modules/flowbite-react/lib/esm/components/FormControls/ToggleSwitch.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useMemo } from 'react';\nimport classNames from 'classnames';\nimport * as nanoid from 'nanoid';\nexport const ToggleSwitch = ({ checked, className, disabled, label, name, onChange, ...props }) => {\n    const id = useMemo(() => nanoid.nanoid(), []);\n    const toggle = () => onChange(!checked);\n    const handleClick = (event) => {\n        event.preventDefault();\n        toggle();\n    };\n    const handleKeyPress = (event) => {\n        event.preventDefault();\n    };\n    return (_jsxs(_Fragment, { children: [name && checked && _jsx(\"input\", { checked: checked, hidden: true, name: name, readOnly: true, type: \"checkbox\", className: \"sr-only\" }), _jsxs(\"button\", { \"aria-checked\": checked, \"aria-labelledby\": `${id}-flowbite-toggleswitch-label`, disabled: disabled, id: `${id}-flowbite-toggleswitch`, onClick: handleClick, onKeyPress: handleKeyPress, role: \"switch\", tabIndex: 0, type: \"button\", className: classNames('group relative flex items-center rounded-lg focus:outline-none', {\n                    'cursor-not-allowed opacity-50': disabled,\n                    'cursor-pointer': !disabled,\n                }, className), ...props, children: [_jsx(\"div\", { className: classNames('toggle-bg h-6 w-11 rounded-full border group-focus:ring-4 group-focus:ring-blue-500/25', checked\n                            ? 'border-blue-700 bg-blue-700 after:translate-x-full after:border-white'\n                            : 'border-gray-200 bg-gray-200 dark:border-gray-600 dark:bg-gray-700') }), _jsx(\"span\", { \"data-testid\": \"flowbite-toggleswitch-label\", id: `${id}-flowbite-toggleswitch-label`, className: \"ml-3 text-sm font-medium text-gray-900 dark:text-gray-300\", children: label })] })] }));\n};\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAhB,EAAsBC,IAAI,IAAIC,KAA9B,EAAqCC,QAAQ,IAAIC,SAAjD,QAAkE,mBAAlE;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAO,MAAMC,YAAY,GAAG,QAAuE;EAAA,IAAtE;IAAEC,OAAF;IAAWC,SAAX;IAAsBC,QAAtB;IAAgCC,KAAhC;IAAuCC,IAAvC;IAA6CC,QAA7C;IAAuD,GAAGC;EAA1D,CAAsE;EAC/F,MAAMC,EAAE,GAAGX,OAAO,CAAC,MAAME,MAAM,CAACA,MAAP,EAAP,EAAwB,EAAxB,CAAlB;;EACA,MAAMU,MAAM,GAAG,MAAMH,QAAQ,CAAC,CAACL,OAAF,CAA7B;;EACA,MAAMS,WAAW,GAAIC,KAAD,IAAW;IAC3BA,KAAK,CAACC,cAAN;IACAH,MAAM;EACT,CAHD;;EAIA,MAAMI,cAAc,GAAIF,KAAD,IAAW;IAC9BA,KAAK,CAACC,cAAN;EACH,CAFD;;EAGA,OAAQlB,KAAK,CAACE,SAAD,EAAY;IAAEkB,QAAQ,EAAE,CAACT,IAAI,IAAIJ,OAAR,IAAmBT,IAAI,CAAC,OAAD,EAAU;MAAES,OAAO,EAAEA,OAAX;MAAoBc,MAAM,EAAE,IAA5B;MAAkCV,IAAI,EAAEA,IAAxC;MAA8CW,QAAQ,EAAE,IAAxD;MAA8DC,IAAI,EAAE,UAApE;MAAgFf,SAAS,EAAE;IAA3F,CAAV,CAAxB,EAA2IR,KAAK,CAAC,QAAD,EAAW;MAAE,gBAAgBO,OAAlB;MAA2B,mBAAoB,GAAEO,EAAG,8BAApD;MAAmFL,QAAQ,EAAEA,QAA7F;MAAuGK,EAAE,EAAG,GAAEA,EAAG,wBAAjH;MAA0IU,OAAO,EAAER,WAAnJ;MAAgKS,UAAU,EAAEN,cAA5K;MAA4LO,IAAI,EAAE,QAAlM;MAA4MC,QAAQ,EAAE,CAAtN;MAAyNJ,IAAI,EAAE,QAA/N;MAAyOf,SAAS,EAAEJ,UAAU,CAAC,gEAAD,EAAmE;QACjf,iCAAiCK,QADgd;QAEjf,kBAAkB,CAACA;MAF8d,CAAnE,EAG/aD,SAH+a,CAA9P;MAGrK,GAAGK,KAHkK;MAG3JO,QAAQ,EAAE,CAACtB,IAAI,CAAC,KAAD,EAAQ;QAAEU,SAAS,EAAEJ,UAAU,CAAC,wFAAD,EAA2FG,OAAO,GAC3J,uEAD2J,GAE3J,mEAFyD;MAAvB,CAAR,CAAL,EAEoDT,IAAI,CAAC,MAAD,EAAS;QAAE,eAAe,6BAAjB;QAAgDgB,EAAE,EAAG,GAAEA,EAAG,8BAA1D;QAAyFN,SAAS,EAAE,2DAApG;QAAiKY,QAAQ,EAAEV;MAA3K,CAAT,CAFxD;IAHiJ,CAAX,CAAhJ;EAAZ,CAAZ,CAAb;AAMH,CAhBM"},"metadata":{},"sourceType":"module"}