{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport * as nanoid from 'nanoid';\nconst colorClasses = {\n  dark: 'bg-gray-600 dark:bg-gray-300',\n  blue: 'bg-blue-600 dark:bg-blue-600',\n  red: 'bg-red-600 dark:bg-red-500',\n  green: 'bg-green-600 dark:bg-green-500',\n  yellow: 'bg-yellow-400 dark:bg-yellow-400',\n  indigo: 'bg-indigo-600 dark:bg-indigo-500',\n  purple: 'bg-purple-600 dark:bg-purple-500'\n};\nconst sizeClasses = {\n  sm: 'h-1.5',\n  md: 'h-2.5',\n  lg: 'h-4',\n  xl: 'h-6'\n};\nexport const Progress = _ref => {\n  let {\n    className,\n    color = 'blue',\n    label = '',\n    labelPosition = 'inside',\n    labelProgress = false,\n    progress,\n    size = 'md',\n    ...props\n  } = _ref;\n  const id = nanoid.nanoid();\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"span\", {\n      id: `${id}-flowbite-progress`,\n      className: \"sr-only\",\n      children: label\n    }), _jsxs(\"div\", {\n      \"aria-labelledby\": `${id}-flowbite-progress`,\n      \"aria-valuenow\": progress,\n      role: \"progressbar\",\n      ...props,\n      children: [label && labelPosition === 'outside' && _jsxs(\"div\", {\n        className: \"mb-1 flex justify-between font-medium dark:text-white\",\n        children: [_jsx(\"span\", {\n          children: label\n        }), labelProgress && _jsxs(\"span\", {\n          children: [progress, \"%\"]\n        })]\n      }), _jsx(\"div\", {\n        className: classNames('w-full overflow-hidden rounded-full bg-gray-200 dark:bg-gray-700', sizeClasses[size]),\n        children: _jsx(\"div\", {\n          className: classNames('flex items-center justify-center rounded-full text-center font-medium leading-none text-blue-100', colorClasses[color], sizeClasses[size], className),\n          style: {\n            width: `${progress}%`\n          },\n          children: label && labelPosition === 'inside' && label\n        })\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","classNames","nanoid","colorClasses","dark","blue","red","green","yellow","indigo","purple","sizeClasses","sm","md","lg","xl","Progress","className","color","label","labelPosition","labelProgress","progress","size","props","id","children","role","style","width"],"sources":["/Users/kamalnayanupadhyay/Documents/react router/my-app/node_modules/flowbite-react/lib/esm/components/Progress/index.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport * as nanoid from 'nanoid';\nconst colorClasses = {\n    dark: 'bg-gray-600 dark:bg-gray-300',\n    blue: 'bg-blue-600 dark:bg-blue-600',\n    red: 'bg-red-600 dark:bg-red-500',\n    green: 'bg-green-600 dark:bg-green-500',\n    yellow: 'bg-yellow-400 dark:bg-yellow-400',\n    indigo: 'bg-indigo-600 dark:bg-indigo-500',\n    purple: 'bg-purple-600 dark:bg-purple-500',\n};\nconst sizeClasses = {\n    sm: 'h-1.5',\n    md: 'h-2.5',\n    lg: 'h-4',\n    xl: 'h-6',\n};\nexport const Progress = ({ className, color = 'blue', label = '', labelPosition = 'inside', labelProgress = false, progress, size = 'md', ...props }) => {\n    const id = nanoid.nanoid();\n    return (_jsxs(_Fragment, { children: [_jsx(\"span\", { id: `${id}-flowbite-progress`, className: \"sr-only\", children: label }), _jsxs(\"div\", { \"aria-labelledby\": `${id}-flowbite-progress`, \"aria-valuenow\": progress, role: \"progressbar\", ...props, children: [label && labelPosition === 'outside' && (_jsxs(\"div\", { className: \"mb-1 flex justify-between font-medium dark:text-white\", children: [_jsx(\"span\", { children: label }), labelProgress && _jsxs(\"span\", { children: [progress, \"%\"] })] })), _jsx(\"div\", { className: classNames('w-full overflow-hidden rounded-full bg-gray-200 dark:bg-gray-700', sizeClasses[size]), children: _jsx(\"div\", { className: classNames('flex items-center justify-center rounded-full text-center font-medium leading-none text-blue-100', colorClasses[color], sizeClasses[size], className), style: { width: `${progress}%` }, children: label && labelPosition === 'inside' && label }) })] })] }));\n};\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAhB,EAAsBC,IAAI,IAAIC,KAA9B,EAAqCC,QAAQ,IAAIC,SAAjD,QAAkE,mBAAlE;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,8BADW;EAEjBC,IAAI,EAAE,8BAFW;EAGjBC,GAAG,EAAE,4BAHY;EAIjBC,KAAK,EAAE,gCAJU;EAKjBC,MAAM,EAAE,kCALS;EAMjBC,MAAM,EAAE,kCANS;EAOjBC,MAAM,EAAE;AAPS,CAArB;AASA,MAAMC,WAAW,GAAG;EAChBC,EAAE,EAAE,OADY;EAEhBC,EAAE,EAAE,OAFY;EAGhBC,EAAE,EAAE,KAHY;EAIhBC,EAAE,EAAE;AAJY,CAApB;AAMA,OAAO,MAAMC,QAAQ,GAAG,QAAiI;EAAA,IAAhI;IAAEC,SAAF;IAAaC,KAAK,GAAG,MAArB;IAA6BC,KAAK,GAAG,EAArC;IAAyCC,aAAa,GAAG,QAAzD;IAAmEC,aAAa,GAAG,KAAnF;IAA0FC,QAA1F;IAAoGC,IAAI,GAAG,IAA3G;IAAiH,GAAGC;EAApH,CAAgI;EACrJ,MAAMC,EAAE,GAAGvB,MAAM,CAACA,MAAP,EAAX;EACA,OAAQJ,KAAK,CAACE,SAAD,EAAY;IAAE0B,QAAQ,EAAE,CAAC9B,IAAI,CAAC,MAAD,EAAS;MAAE6B,EAAE,EAAG,GAAEA,EAAG,oBAAZ;MAAiCR,SAAS,EAAE,SAA5C;MAAuDS,QAAQ,EAAEP;IAAjE,CAAT,CAAL,EAAyFrB,KAAK,CAAC,KAAD,EAAQ;MAAE,mBAAoB,GAAE2B,EAAG,oBAA3B;MAAgD,iBAAiBH,QAAjE;MAA2EK,IAAI,EAAE,aAAjF;MAAgG,GAAGH,KAAnG;MAA0GE,QAAQ,EAAE,CAACP,KAAK,IAAIC,aAAa,KAAK,SAA3B,IAAyCtB,KAAK,CAAC,KAAD,EAAQ;QAAEmB,SAAS,EAAE,uDAAb;QAAsES,QAAQ,EAAE,CAAC9B,IAAI,CAAC,MAAD,EAAS;UAAE8B,QAAQ,EAAEP;QAAZ,CAAT,CAAL,EAAoCE,aAAa,IAAIvB,KAAK,CAAC,MAAD,EAAS;UAAE4B,QAAQ,EAAE,CAACJ,QAAD,EAAW,GAAX;QAAZ,CAAT,CAA1D;MAAhF,CAAR,CAA/C,EAA+O1B,IAAI,CAAC,KAAD,EAAQ;QAAEqB,SAAS,EAAEhB,UAAU,CAAC,kEAAD,EAAqEU,WAAW,CAACY,IAAD,CAAhF,CAAvB;QAAgHG,QAAQ,EAAE9B,IAAI,CAAC,KAAD,EAAQ;UAAEqB,SAAS,EAAEhB,UAAU,CAAC,kGAAD,EAAqGE,YAAY,CAACe,KAAD,CAAjH,EAA0HP,WAAW,CAACY,IAAD,CAArI,EAA6IN,SAA7I,CAAvB;UAAgLW,KAAK,EAAE;YAAEC,KAAK,EAAG,GAAEP,QAAS;UAArB,CAAvL;UAAkNI,QAAQ,EAAEP,KAAK,IAAIC,aAAa,KAAK,QAA3B,IAAuCD;QAAnQ,CAAR;MAA9H,CAAR,CAAnP;IAApH,CAAR,CAA9F;EAAZ,CAAZ,CAAb;AACH,CAHM"},"metadata":{},"sourceType":"module"}