{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { HiChevronDown } from 'react-icons/hi';\nimport { useAccordionContext } from './AccordionPanelContext';\nimport { useTheme } from '../Flowbite/ThemeContext';\nexport const AccordionTitle = _ref => {\n  let {\n    children,\n    arrowIcon: ArrowIcon = HiChevronDown,\n    ...props\n  } = _ref;\n  const {\n    flush,\n    isOpen,\n    setIsOpen\n  } = useAccordionContext();\n\n  const onClick = () => setIsOpen(!isOpen);\n\n  const {\n    theme: {\n      accordion: {\n        title\n      }\n    }\n  } = useTheme();\n  const baseStyle = classNames('flex w-full items-center justify-between first:rounded-t-lg last:rounded-b-lg', title.base);\n  const buttonStateStyle = classNames({\n    [title.notFlushed]: !flush,\n    [title.isOpen]: isOpen,\n    [title.isOpenNotFlushed]: isOpen && !flush\n  });\n  return _jsxs(\"button\", {\n    \"data-testid\": \"accordion-title-element\",\n    ...props,\n    type: \"button\",\n    className: classNames(baseStyle, buttonStateStyle),\n    onClick: onClick,\n    children: [_jsx(\"h2\", {\n      children: children\n    }), _jsx(ArrowIcon, {\n      className: classNames('h-6 w-6 shrink-0', {\n        'rotate-180': isOpen\n      })\n    })]\n  });\n};","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","classNames","HiChevronDown","useAccordionContext","useTheme","AccordionTitle","children","arrowIcon","ArrowIcon","props","flush","isOpen","setIsOpen","onClick","theme","accordion","title","baseStyle","base","buttonStateStyle","notFlushed","isOpenNotFlushed","type","className"],"sources":["/Users/kamalnayanupadhyay/Documents/react router/my-app/node_modules/flowbite-react/lib/esm/components/Accordion/AccordionTitle.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { HiChevronDown } from 'react-icons/hi';\nimport { useAccordionContext } from './AccordionPanelContext';\nimport { useTheme } from '../Flowbite/ThemeContext';\nexport const AccordionTitle = ({ children, arrowIcon: ArrowIcon = HiChevronDown, ...props }) => {\n    const { flush, isOpen, setIsOpen } = useAccordionContext();\n    const onClick = () => setIsOpen(!isOpen);\n    const { theme: { accordion: { title }, }, } = useTheme();\n    const baseStyle = classNames('flex w-full items-center justify-between first:rounded-t-lg last:rounded-b-lg', title.base);\n    const buttonStateStyle = classNames({\n        [title.notFlushed]: !flush,\n        [title.isOpen]: isOpen,\n        [title.isOpenNotFlushed]: isOpen && !flush,\n    });\n    return (_jsxs(\"button\", { \"data-testid\": \"accordion-title-element\", ...props, type: \"button\", className: classNames(baseStyle, buttonStateStyle), onClick: onClick, children: [_jsx(\"h2\", { children: children }), _jsx(ArrowIcon, { className: classNames('h-6 w-6 shrink-0', { 'rotate-180': isOpen }) })] }));\n};\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAhB,EAAsBC,IAAI,IAAIC,KAA9B,QAA2C,mBAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAO,MAAMC,cAAc,GAAG,QAAkE;EAAA,IAAjE;IAAEC,QAAF;IAAYC,SAAS,EAAEC,SAAS,GAAGN,aAAnC;IAAkD,GAAGO;EAArD,CAAiE;EAC5F,MAAM;IAAEC,KAAF;IAASC,MAAT;IAAiBC;EAAjB,IAA+BT,mBAAmB,EAAxD;;EACA,MAAMU,OAAO,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA/B;;EACA,MAAM;IAAEG,KAAK,EAAE;MAAEC,SAAS,EAAE;QAAEC;MAAF;IAAb;EAAT,IAAwCZ,QAAQ,EAAtD;EACA,MAAMa,SAAS,GAAGhB,UAAU,CAAC,+EAAD,EAAkFe,KAAK,CAACE,IAAxF,CAA5B;EACA,MAAMC,gBAAgB,GAAGlB,UAAU,CAAC;IAChC,CAACe,KAAK,CAACI,UAAP,GAAoB,CAACV,KADW;IAEhC,CAACM,KAAK,CAACL,MAAP,GAAgBA,MAFgB;IAGhC,CAACK,KAAK,CAACK,gBAAP,GAA0BV,MAAM,IAAI,CAACD;EAHL,CAAD,CAAnC;EAKA,OAAQV,KAAK,CAAC,QAAD,EAAW;IAAE,eAAe,yBAAjB;IAA4C,GAAGS,KAA/C;IAAsDa,IAAI,EAAE,QAA5D;IAAsEC,SAAS,EAAEtB,UAAU,CAACgB,SAAD,EAAYE,gBAAZ,CAA3F;IAA0HN,OAAO,EAAEA,OAAnI;IAA4IP,QAAQ,EAAE,CAACR,IAAI,CAAC,IAAD,EAAO;MAAEQ,QAAQ,EAAEA;IAAZ,CAAP,CAAL,EAAqCR,IAAI,CAACU,SAAD,EAAY;MAAEe,SAAS,EAAEtB,UAAU,CAAC,kBAAD,EAAqB;QAAE,cAAcU;MAAhB,CAArB;IAAvB,CAAZ,CAAzC;EAAtJ,CAAX,CAAb;AACH,CAXM"},"metadata":{},"sourceType":"module"}